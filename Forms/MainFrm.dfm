object MainForm: TMainForm
  Left = 245
  Top = 81
  BorderIcons = [biSystemMenu, biMinimize]
  BorderStyle = bsDialog
  Caption = 'X'#178'Software XML Data Binding for Delphi'
  ClientHeight = 312
  ClientWidth = 438
  Color = clBtnFace
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clWindowText
  Font.Height = -11
  Font.Name = 'Tahoma'
  Font.Style = []
  OldCreateOrder = False
  Position = poScreenCenter
  OnCreate = FormCreate
  DesignSize = (
    438
    312)
  PixelsPerInch = 96
  TextHeight = 13
  object lblSchema: TLabel
    Left = 8
    Top = 11
    Width = 58
    Height = 13
    Caption = 'Schema file:'
  end
  object gbOutput: TGroupBox
    Left = 8
    Top = 43
    Width = 422
    Height = 225
    Anchors = [akLeft, akTop, akBottom]
    Caption = ' Output '
    TabOrder = 0
    DesignSize = (
      422
      225)
    object rbFile: TRadioButton
      Left = 11
      Top = 21
      Width = 127
      Height = 17
      Caption = ' Output to &single file'
      Checked = True
      TabOrder = 0
      TabStop = True
      OnClick = OutputTypeClick
    end
    object rbFolder: TRadioButton
      Left = 11
      Top = 44
      Width = 150
      Height = 17
      Caption = ' Output to separate &files'
      TabOrder = 1
      OnClick = OutputTypeClick
    end
    object plOutput: TPageControl
      Left = 3
      Top = 68
      Width = 416
      Height = 93
      ActivePage = spFolder
      Anchors = [akLeft, akTop, akRight]
      Style = tsButtons
      TabOrder = 2
      object spFile: TTabSheet
        TabVisible = False
        DesignSize = (
          408
          83)
        object lblFile: TLabel
          Left = 4
          Top = 7
          Width = 55
          Height = 13
          Caption = 'Output file:'
        end
        object feFile: TJvFilenameEdit
          Left = 89
          Top = 3
          Width = 316
          Height = 21
          DialogOptions = [ofHideReadOnly, ofCreatePrompt]
          Anchors = [akLeft, akTop, akRight]
          TabOrder = 0
          Text = ''
        end
      end
      object spFolder: TTabSheet
        TabVisible = False
        object lblFolder: TLabel
          Left = 4
          Top = 7
          Width = 69
          Height = 13
          Caption = 'Output folder:'
        end
        object lblFolderPrefix: TLabel
          Left = 4
          Top = 32
          Width = 51
          Height = 13
          Caption = 'File prefix:'
        end
        object lblFolderPostfix: TLabel
          Left = 4
          Top = 58
          Width = 56
          Height = 13
          Caption = 'File postfix:'
        end
        object edtFolderPrefix: TEdit
          Left = 89
          Top = 31
          Width = 316
          Height = 21
          TabOrder = 0
        end
        object edtFolderPostfix: TEdit
          Left = 89
          Top = 59
          Width = 316
          Height = 21
          TabOrder = 1
        end
        object deFolder: TEdit
          Left = 89
          Top = 4
          Width = 245
          Height = 21
          TabOrder = 2
        end
        object deFolderPropertiesButton: TButton
          Left = 340
          Top = 3
          Width = 65
          Height = 22
          Caption = 'Properties'
          TabOrder = 3
          OnClick = deFolderPropertiesButtonClick
        end
      end
    end
    object cbHasChecksEmpty: TCheckBox
      Left = 11
      Top = 175
      Width = 401
      Height = 17
      Hint = 
        'Workaround for XML'#39's generated by people who do not understand t' +
        'he concept of optional elements or XSD'#39's in general'
      Caption = 
        ' Check for empty elements as well as omitted elements in Has pro' +
        'perties'
      TabOrder = 3
    end
    object cbGenerateGetOptionalOrDefault: TCheckBox
      Left = 11
      Top = 198
      Width = 401
      Height = 17
      Hint = ' Generate a "Def" method for optional elements'
      Caption = ' Generate a "Def" method for optional elements'
      TabOrder = 4
    end
  end
  object btnGenerate: TButton
    Left = 274
    Top = 279
    Width = 75
    Height = 25
    Anchors = [akRight, akBottom]
    Caption = '&Generate'
    Default = True
    TabOrder = 3
    OnClick = btnGenerateClick
  end
  object btnClose: TButton
    Left = 355
    Top = 279
    Width = 75
    Height = 25
    Anchors = [akRight, akBottom]
    Cancel = True
    Caption = '&Close'
    TabOrder = 2
    OnClick = btnCloseClick
  end
  object btnHints: TButton
    Left = 7
    Top = 279
    Width = 142
    Height = 25
    Anchors = [akRight, akBottom]
    Cancel = True
    Caption = 'Generate blank &Hints file'
    TabOrder = 1
    OnClick = btnHintsClick
  end
  object feSchema: TJvFilenameEdit
    Left = 104
    Top = 8
    Width = 316
    Height = 21
    OnAfterDialog = feSchemaAfterDialog
    DialogOptions = [ofHideReadOnly, ofFileMustExist]
    TabOrder = 4
    Text = ''
  end
  object dlgSchema: TOpenDialog
    Filter = 'W3C XML Schema files (*.xsd)|*.xsd|All files (*.*)|*.*'
    Options = [ofHideReadOnly, ofFileMustExist, ofEnableSizing]
    Left = 284
    Top = 40
  end
  object dlgOutputFile: TSaveDialog
    Filter = 'Delphi source files (*.pas)|*.pas|All files (*.*)|*.*'
    Options = [ofHideReadOnly, ofPathMustExist, ofEnableSizing]
    Left = 387
    Top = 37
  end
end
